apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
  compileSdkVersion versions.compileSdk
  buildToolsVersion versions.buildTools

  defaultConfig {
    applicationId "vn.tiki.sample"
    minSdkVersion versions.minSdk
    targetSdkVersion versions.compileSdk
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
      all {
        jacoco {
          includeNoLocationClasses = true
        }
      }
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation deps.support.appCompat
  implementation deps.support.design
  implementation deps.support.constrain
  implementation deps.dagger.dagger
  annotationProcessor deps.dagger.compiler
  implementation deps.butterknife.butterknife
  annotationProcessor deps.butterknife.compiler
  implementation project(':intents')
  annotationProcessor project(':intents-compiler')
  implementation deps.rx.java
  implementation deps.rx.android
  implementation project(':daggers')
  implementation project(':mvp')
//  implementation 'com.github.tikivn.android-template:daggers:-SNAPSHOT'


  testImplementation deps.test.junit
  testImplementation deps.test.mockito
  testImplementation deps.test.truth
  testImplementation deps.test.robolectric
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
  def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
  def mainSrc = "${project.projectDir}/src/main/java"

  sourceDirectories = files([mainSrc])
  classDirectories = files([debugTree])
  executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}
